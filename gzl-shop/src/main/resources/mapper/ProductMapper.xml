<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gzl.shop.mapper.ProductMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.gzl.shop.entity.Product">
        <result column="id" property="id" />
        <result column="pid" property="pid" />
        <result column="sid" property="sid" />
        <result column="cn_name" property="cnName" />
        <result column="en_name" property="enName" />
        <result column="cas" property="cas" />
        <result column="goods_no" property="goodsNo" />
        <result column="spec" property="spec" />
        <result column="supervision_cond" property="supervisionCond" />
        <result column="list_price" property="listPrice" />
        <result column="off_price" property="offPrice" />
        <result column="promotion_price" property="promotionPrice" />
        <result column="promotion_start_time" property="promotionStartTime" />
        <result column="promotion_end_time" property="promotionEndTime" />
        <result column="stock_detail" property="stockDetail" />
        <result column="transport_cond" property="transportCond" />
        <result column="storage_temperature" property="storageTemperature" />
        <result column="delivery" property="delivery" />
        <result column="stock_num" property="stockNum" />
        <result column="dmg_level" property="dmgLevel" />
        <result column="mdl" property="mdl" />
        <result column="data_source" property="dataSource" />
        <result column="third_code" property="thirdCode" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="update_use" property="updateUse" />
        <result column="stats" property="stats" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, pid, sid, cn_name, en_name, cas, goods_no, spec, supervision_cond, list_price, off_price, promotion_price, promotion_start_time, promotion_end_time, stock_detail, transport_cond, storage_temperature, delivery, stock_num, dmg_level, mdl, data_source, third_code, create_time, update_time, update_use, stats
    </sql>

    <select id="selectProduct" parameterType="com.gzl.base.common.model.shop.product.ProductRequest" resultType="com.gzl.base.common.model.shop.product.ProductResponse">
        select * from shop_product
        <where>
            <if test="pid!=null and pid!=''">and pid=#{pid}</if>
            <if test="cnName!=null and cnName!=''">and cn_name=#{cnName}</if>
            <if test="cas!=null and cas!=''">and cas=#{cas}</if>
            <if test="brand!=null and brand!=''">and brand=#{brand}</if>
            <if test="goodsNo!=null and goodsNo!=''">and goods_no=#{goodsNo}</if>
            <if test="spec!=null and spec!=''">and spec=#{spec}</if>
        </where>
    </select>

    <insert id="insertOrUpdateProduct">
        INSERT INTO shop_product(pid,sid,cn_name,en_name,cas,goods_no,spec,supervision_cond,list_price,
                                 off_price,promotion_price,promotion_start_time,promotion_end_time,stock_detail,transport_cond,
                                 storage_temperature,delivery,stock_num,dmg_level,mdl,data_source,third_code,create_time,
                                 update_time,update_use,stats)
        values(#{id},#{pid},#{sid},#{cnName},#{enName},#{cas},#{goodsNo},#{spec},
               #{supervisionCond},#{listPrice},#{offPrice},#{promotionPrice},#{promotionStartTime},
               #{promotionEndTime},#{stockDetail},#{transportCond},#{storageTemperature},#{delivery},
               #{stockNum},#{dmgLevel},#{mdl},#{dataSource},#{thirdCode},#{createTime},#{updateTime},
               #{updateUse},#{stats})
            ON DUPLICATE KEY UPDATE(
                 id=VALUES(id),
                 pid=VALUES(pid),
                 sid=VALUES(sid),
                 cn_name=VALUES(cn_name),
                 en_name=VALUES(en_name),
                 cas=VALUES(cas),
                 goods_no=VALUES(goods_no),
                 spec=VALUES(spec),
                 supervision_cond=VALUES(supervision_cond),
                 list_price=VALUES(list_price),
                 off_price=VALUES(off_price),
                 promotion_price=VALUES(promotion_price),
                 promotion_start_time=VALUES(promotion_start_time),
                 promotion_end_time=VALUES(promotion_end_time),
                 stock_detail=VALUES(stock_detail),
                 transport_cond=VALUES(transport_cond),
                 storage_temperature=VALUES(storage_temperature),
                 delivery=VALUES(delivery),
                 stock_num=VALUES(stock_num),
                 dmg_level=VALUES(dmg_level),
                 mdl=VALUES(mdl),
                 data_source=VALUES(data_source),
                 third_code=VALUES(third_code),
                 create_time=VALUES(create_time),
                 update_time=VALUES(update_time),
                 update_use=VALUES(update_use),
                 stats=VALUES(stats))
    </insert>

    <insert id="batchInsertOrUpdateProduct">
        INSERT INTO shop_product (pid,sid,cn_name,en_name,cas,goods_no,spec,supervision_cond,list_price,off_price,promotion_price,
        promotion_start_time,promotion_end_time,stock_detail,transport_cond,storage_temperature,delivery,stock_num,dmg_level,mdl,
        data_source,third_code,create_time,update_time,update_use,stats)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.pid},#{item.sid},#{item.cnName},#{item.enName},#{item.cas},#{item.goodsNo},#{item.spec},#{item.supervisionCond},
            #{item.listPrice},#{item.offPrice},#{item.promotionPrice},#{item.promotionStartTime},#{item.promotionEndTime},
            #{item.stockDetail},#{item.transportCond},#{item.storageTemperature},#{item.delivery},#{item.stockNum},#{item.dmgLevel},
            #{item.mdl},#{item.dataSource},#{item.thirdCode},#{item.createTime},#{item.updateTime},#{item.updateUse},#{item.stats})
        </foreach>
        ON DUPLICATE KEY UPDATE(
            pid=VALUES(pid),
            sid=VALUES(sid),
            cn_name=VALUES(cn_name),
            en_name=VALUES(en_name),
            cas=VALUES(cas),
            goods_no=VALUES(goods_no),
            spec=VALUES(spec),
            supervision_cond=VALUES(supervision_cond),
            list_price=VALUES(list_price),
            off_price=VALUES(off_price),
            promotion_price=VALUES(promotion_price),
            promotion_start_time=VALUES(promotion_start_time),
            promotion_end_time=VALUES(promotion_end_time),
            stock_detail=VALUES(stock_detail),
            transport_cond=VALUES(transport_cond),
            storage_temperature=VALUES(storage_temperature),
            delivery=VALUES(delivery),
            stock_num=VALUES(stock_num),
            dmg_level=VALUES(dmg_level),
            mdl=VALUES(mdl),
            data_source=VALUES(data_source),
            third_code=VALUES(third_code),
            create_time=VALUES(create_time),
            update_time=VALUES(update_time),
            update_use=VALUES(update_use),
            stats=VALUES(stats))
    </insert>





</mapper>
